/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/__root'
import { Route as InterestingRouteImport } from './app/interesting'
import { Route as AboutRouteImport } from './app/about'
import { Route as IndexRouteImport } from './app/index'
import { Route as BooksIndexRouteImport } from './app/books/index'
import { Route as AboutIndexRouteImport } from './app/about/index'
import { Route as BooksAnalyticsRouteImport } from './app/books/analytics'
import { Route as AboutUserManualRouteImport } from './app/about/user-manual'
import { Route as AboutHowIGotIntoPmRouteImport } from './app/about/how-i-got-into-pm'

const InterestingRoute = InterestingRouteImport.update({
  id: '/interesting',
  path: '/interesting',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BooksIndexRoute = BooksIndexRouteImport.update({
  id: '/books/',
  path: '/books/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AboutRoute,
} as any)
const BooksAnalyticsRoute = BooksAnalyticsRouteImport.update({
  id: '/books/analytics',
  path: '/books/analytics',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutUserManualRoute = AboutUserManualRouteImport.update({
  id: '/user-manual',
  path: '/user-manual',
  getParentRoute: () => AboutRoute,
} as any)
const AboutHowIGotIntoPmRoute = AboutHowIGotIntoPmRouteImport.update({
  id: '/how-i-got-into-pm',
  path: '/how-i-got-into-pm',
  getParentRoute: () => AboutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRouteWithChildren
  '/interesting': typeof InterestingRoute
  '/about/how-i-got-into-pm': typeof AboutHowIGotIntoPmRoute
  '/about/user-manual': typeof AboutUserManualRoute
  '/books/analytics': typeof BooksAnalyticsRoute
  '/about/': typeof AboutIndexRoute
  '/books': typeof BooksIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/interesting': typeof InterestingRoute
  '/about/how-i-got-into-pm': typeof AboutHowIGotIntoPmRoute
  '/about/user-manual': typeof AboutUserManualRoute
  '/books/analytics': typeof BooksAnalyticsRoute
  '/about': typeof AboutIndexRoute
  '/books': typeof BooksIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRouteWithChildren
  '/interesting': typeof InterestingRoute
  '/about/how-i-got-into-pm': typeof AboutHowIGotIntoPmRoute
  '/about/user-manual': typeof AboutUserManualRoute
  '/books/analytics': typeof BooksAnalyticsRoute
  '/about/': typeof AboutIndexRoute
  '/books/': typeof BooksIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/interesting'
    | '/about/how-i-got-into-pm'
    | '/about/user-manual'
    | '/books/analytics'
    | '/about/'
    | '/books'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/interesting'
    | '/about/how-i-got-into-pm'
    | '/about/user-manual'
    | '/books/analytics'
    | '/about'
    | '/books'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/interesting'
    | '/about/how-i-got-into-pm'
    | '/about/user-manual'
    | '/books/analytics'
    | '/about/'
    | '/books/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRouteWithChildren
  InterestingRoute: typeof InterestingRoute
  BooksAnalyticsRoute: typeof BooksAnalyticsRoute
  BooksIndexRoute: typeof BooksIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/interesting': {
      id: '/interesting'
      path: '/interesting'
      fullPath: '/interesting'
      preLoaderRoute: typeof InterestingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/books/': {
      id: '/books/'
      path: '/books'
      fullPath: '/books'
      preLoaderRoute: typeof BooksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/'
      fullPath: '/about/'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof AboutRoute
    }
    '/books/analytics': {
      id: '/books/analytics'
      path: '/books/analytics'
      fullPath: '/books/analytics'
      preLoaderRoute: typeof BooksAnalyticsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/user-manual': {
      id: '/about/user-manual'
      path: '/user-manual'
      fullPath: '/about/user-manual'
      preLoaderRoute: typeof AboutUserManualRouteImport
      parentRoute: typeof AboutRoute
    }
    '/about/how-i-got-into-pm': {
      id: '/about/how-i-got-into-pm'
      path: '/how-i-got-into-pm'
      fullPath: '/about/how-i-got-into-pm'
      preLoaderRoute: typeof AboutHowIGotIntoPmRouteImport
      parentRoute: typeof AboutRoute
    }
  }
}

interface AboutRouteChildren {
  AboutHowIGotIntoPmRoute: typeof AboutHowIGotIntoPmRoute
  AboutUserManualRoute: typeof AboutUserManualRoute
  AboutIndexRoute: typeof AboutIndexRoute
}

const AboutRouteChildren: AboutRouteChildren = {
  AboutHowIGotIntoPmRoute: AboutHowIGotIntoPmRoute,
  AboutUserManualRoute: AboutUserManualRoute,
  AboutIndexRoute: AboutIndexRoute,
}

const AboutRouteWithChildren = AboutRoute._addFileChildren(AboutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRouteWithChildren,
  InterestingRoute: InterestingRoute,
  BooksAnalyticsRoute: BooksAnalyticsRoute,
  BooksIndexRoute: BooksIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
